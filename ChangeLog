2010-01-10 Keith

    * deflarry.py(merge): Speed up for when labels are the same along a axis.

2010-01-09 Keith

    * io/io.py(IO), io/io.py(lara), __init__.py: Complete rewrite of the io
      module to remove pickling of larry labels. Now labels are stored as
      Numpy arrays.
      
    * io/io.py(save), io/io.py(load), io/io.py(_load_label),
      io/io.py(_list2array), io/io.py(_is_archived_larry), io/io.py(repack):
      New functions.
      
    * deflarry.py(larry.__init__): Doc string typo.      

2010-01-07 Keith

    * deflarry.py(__align): Same speed up method as in morph but only gave a
      tiny speed up in __align.

    * deflarry.py(morph): 20% speed up!
    
    * io/io.py(lara.__setitem__): First attempt at setitem.

2010-01-06 Keith

    * io/io.py(lara): A new larry-like archive class.
      
    * io/io.py(IO.__init), io/io.py(IO.__init),
      io/tests/io_test.py(test_io_1): Return a lara instead of a larry.
      Updated and extended doc string now that IO uses the lara class.

    * deflarry.py(__getitem__): Small change to this function so that it can
      be reused in the lara class.

    * afunc.py(ranking): Bug fix: -Inf and Inf were not properly handled.

    * tests/afunc_arr_test.py(Test_ranking): Added 4 ranking unit test for
      Inf.

    * io/io.py(IO.space), io/io.py(IO.freespace): Flush pending writes to disk
      before measuring disk space size.

2010-01-04 Keith

    * io/tests, io/tests/io_test.py: Made a unit test module for io with a few
      unit tests in it.

    * io/io.py(space), io/io.py(freespace), io/io.py(repack),
      io/io.py(_repack_conditional), io/io.py(__init__): New methods.
      
    * io/io.py(__delitem__), io/io.py(clear): Repack archive when needed.  
      
    * io/io.py(values), io/io.py(items), io/io.py(iterkeys),
      io/io.py(itervalues), io/io.py(iteritems), io/io.py(clear): new methods.
      
    * io/io.py(__init__): Doc string work.   

2010-01-03 Keith

    * io/io.py(IO.__setitem__): Made more robust.

    * io/io.py(IO.__contains__): Removed method. Not needed.    

    * io/io.py(IO.__init__): Improved doc string.

    * io/io.py(IO): Added ability to overwrite when saving a larry if the key
      already exists. This makes the io more dictionary like. Added notes and
      examples to the doc string. Sort by key name in repr.

    * io/io.py, README, __init__.py: Remove npz archive format. Just
      concentrate on one format (hdf5) for now. Also made __repr__ work
      without needing to load the data.

    * io/hdf5.py, io/npz.py: Remove these modules that contained save and load
      functions for hdf5 and npz format. I now use a dictionary-like
      interface.

    * io/io.py(IO_hdf5.__deleteitem__): New method.
    
    * README: Tweak.    

2010-01-02 Keith

    * README: Improvements.

    * io/io.py, README, __init__.py: New module to save and load larrys in
      hdf5 or npz format using a dictionary-like interface.
      
    * io/prettytable.py: New module to make pretty print tables.         

    * io/hdf5.py, __init__.py: New module for saving and loading larrys in
      HDF5 format.

2010-01-01 Keith

    * io.py, io, io/npz.py, io/__init__.py, __init__.py: Rename io.py to
      npz.py and move it to a new subpackage named io.

    * tests/deflarry_test.py: Added unit tests for creating larrys from lists,
      tuples, matrices, and arrays.

    * deflarry.py(__init__): Added ability to make a larry with lists, tuples,
      and numpy matrices (anything that np.asarray can convert to an array).
    
    * README: Rewrote.

    * io.py(load_npz): Add ability to handle files that contain non larry data

    * io.py(save_npz), io.py(load_npz): Improve doc string.
    
    * README: Tweaks.

2009-12-31 Keith

    * io.py: New module to save and load larrys.
    
    * io.py(save_npz), io.py(load_npz): New function to save and load larrys
      in numpy's npz format.    

    * __init__.py: import save_npz and load_npz to top level.

    * deflarry.py(save): Remove method.

    * deflarry.py(shuffle), afunc.py(shuffle): New method and corresponding
      function. Unlike numpy's shuffle this shuffle takes an axis argument.

    * README: Tweak.

    * tests/deflarry_test.py: More minor cleaning.

    * deflarry.py, tests/deflarry_test.py: Clean up.

    * deflarry.py, la/tests/afunc_arr_test.py, la/tests/more_test.py,
      afunc.py: Renamed group_rank to group_ranking.

    * deflarry.py, la/tests/afunc_arr_test.py, la/tests/more_test.py,
      afunc.py: Renamed sector_rank, sector_mean, sector_median, unique_sector
      to group_rank, group_mean, group_median, unique_group to match larry
      method names. Less confusion. Added doc strings. Made unique_group
      faster. Added optional import norm and ties to group_rank.

    * deflarry.py(sign), tests/deflarry_nose_test.py,
      tests/deflarry_test.py: New methos and corresponding unit tests.

    * deflarry.py(__len__): Removed new method. It results in a lot of test
      failures of the binary functions. Odd.

    * deflarry.py(__len__): New method.

    * tests/deflarry_nose_test.py: Big clean up. Removed unused functions and
      fixed known test failure.

    * README: Add a README file.

2009-12-30 Keith

    * afunc.py(sector_dummy), tests/afunc_arr_test.py, tests/more_test.py:
      Remove function and unit tests.
    
    * afunc.py(ranking): Give up on lazy imports of scipy. From now on the la
      package has scipy as a dependency.
      
    * afunc.py(nanmean), afunc.py(_nanmedian), afunc.py(nanmedian): Remove
      these functions and import from scipy instead.
      
    * deflarry.py: Import nanmean, nanmedian from scipy instead of afunc.py.  
         
    * tests/deflarry_test.py: Add doc string.    

    * afunc.py(ranking_1N), afunc.py(ranking_norm): Removed these functions
      since they are special cases fo the new ranking function.
      
    * tests/afunc_arr_test.py: Converted all ranking_norm and ranking_1N
      tests to ranking tests.         
      
    * afunc.py(ranking): Added a doc string.     

    * afunc.py(ranking): Bug fix: input with dtype int and bool now runs
      without crashing.
       
    * deflarry.py(ranking): Added doc string and removed requirement that
      imput must be 2d.   
       
    * deflarry.py: A bunch of formating/style changes.
     
    * deflarry.py(__init__): Speed up init by only formatting error messages
      string if there is an error.
       
    * deflarry.py(vacuum_old), deflarry.py(cut_missing_old): Removed methods.
    
    * tests/deflarry_test.py: Removed vacuum_old tests.
    
    * tests/more_test.py: Clean up. 

2009-12-23 Keith

    * afunc.py(ranking): Bug fix: '0,N-1' and 'gaussian' normalization used
      integer division. Corrected to use float division.

    * afunc.py(ranking_1N_old), afunc.py(ranking_norm_old),
      afunc.py(ranking_old): Removed the old version of the ranking functions.

2009-12-23 Josef

    * afunc.py: replace ranking, ranking_norm, and ranking_1N with new nd
      implementation, rename old functions, one test failure

2009-12-23 Keith

    * deflarry.py(T): Extend transpose from 2d only to arbitrary dimension.

    * tests/deflarry_test.py(Test_properties_01): Added unit tests for the
      transpose of 1d, 3d, and 4d larrys.

    * afunc.py: remove np.seterr

    * deflarry.py(__align): Bug fix: dtype of int and bool were converted to
      float. Now dtype are kept.

    * deflarry.py(__and__), deflarry.py(__or__), deflarry.py(__radd__),
      deflarry.py(__ror__): New functions.

2009-12-23 Josef

    * deflarry_nose_test.py: add test for 3d movingsum, pass without 
      code changes, tests require numpy 1.4 for nan equality testing

    * deflarry.py, afunc.py, deflarry_nose_test.py: enable nd groupmean and
      groupmedian, add 3d test for larry methods

2009-12-22 Josef

    * deflarry.py, deflarry_test.py: vacuum reverse definition of axis argument
      to make it consistent with old behavior

    * deflarry.py, deflarry_test.py: nd version of cut_missing, no new tests,
      keep currently cut_missing_old 

    * deflarry.py, deflarry_test.py: nd version of vacuum with tests,
      keep currently vacuum_old 

    * deflarry.py, deflarry_test.py: add new merge method with tests,
      formatting and docstring by Keith

    * more_test.py: remove uncommented matrix tests 

    * afunc.py: remove comments from refactoring,
      remove redundant .T in sector_dummy

    * decorator.py: delete, not used anymore

    * afunc.py: remove decorators and xxx_old functions, all tests pass

    * afunc.py and tests: disable @wraptoarray1 decorators and matrix tests
      delete afunc_test.py

    * deflarry.py: remove remaining matrix usage

    * tests/more_test.py: minor changes from previous 3d testing

    * slicing_test: delete wrongly committed file, add it in test directory
      reformat changelog

2009-12-16 Josef

    * fix typo in slicing_test, uncovered 2 failing cases in larry
    
    * add generator tests for slicing in 2d and 3d, (currently 40 tests)
    
    * convert ranking to using arrays, rename old version
      (tested against old for 1d,2d - tests not included), API for 1d ?
      
    * convert ranking_norm to using arrays, rename old version
      (tested against old for 1d,2d - tests not included)
      
    * convert lastrank_decay to using arrays, rename old version
      (tested against old for 1d,2d - tests not included), remove forgotten print
      
    * convert ranking_1N to using arrays, rename old version
      (tested against old for 1d,2d(axis=0,1) - tests not included
      
    * remove matrix conversion from larry group methods (covered by tests)
    
    * add new nose test file and notes.txt to repository
    
    * add axis argument to larry.any and larry.all (consistency with numpy and ma)
    
    * add axis back into lastrank (is a reduce operation but keeps dimension)

2009-11-19 Josef

    * convert movingrank and lastrank to use arrays
      API break: lastrank returns 1d not 2d column vector
      1 test, larry.lastrank_1, fails, maybe change back to 2d
      
    * fix larry.movingsum tests, all tests pass again
    
    * convert movingsum_forward to using arrays, add dropped rows/columns
      back into movingsum, correct shape in afun tests, deflarry_test for
      movingsum are wrong now
      
    * convert geometric mean to using arrays, maintain same dimension
    * convert sector functions to using arrays
    
    * add afunc sector functions to return type tests, decorate.
      convert sector_dummy to build an array
      
    * convert quantile to use arrays internally, switch decorator, 
      additional minor changes
      
    * convert covMissing to use arrays internally, switch decorator
    
    * decorate remaining afunc functions with wrong return type,
      add decorator wraptoarray1, now all return type tests pass,
      add scalar handling to decorators, add additional larry.cov test,
      rename M in covMissing (shadows matlib M), 
      remove some boilerplate in more_test, skip 3d tests for now

    * add more_test.py: check return type, and 3d input,
      (errors=10, failures=8) out of 48 tests

    * changing some methods of larry to not use matrix conversion breaks test.
      add decorator to quantile and covMissing, add one test for larry.cov,
      fix errors in covMissing, all current tests pass
      add missing tests for afunc.sector_dummy and afunc.unique_sector 

2009-11-18 Josef

    * apply @wraptomatrix1 to remaining afunc functions, now all tests pass for
      array and for matrices, rename afunc_arr_test.py so it is picked up by nose.
      some larry functions still convert to matrices

    * add decorator module (from pypi), add decorator to convert to matrix,
      use with afunc.ranking, afunc_arr_tes_.py:Test_ranking and deflarry_test pass

    * add afunc_arr_tes_.py: raw translation of afunc_test for arrays instead
      of matrices, 30 out of 54 tests with error or failures

    * la.__init__.py: del Tester after use

    * afunc_test.py: fix failing/incorrect tests for array version of movingsum,
      removed one test because q option is not available anymore

2009-10-21 Josef (alias Carrasco)

    * correct import in func 

    * add nosetesting via numpy, fix one import error in tests after relocation
    
    * change/deepen directory structure

2009-09-29 Keith

    * core/deflarry.py: Made it possible to subclass larry without having it
      revert back to a regular larry when certain methods are called. I did
      that by changing larry(x, label) to type(self)(x, label) in many places.

2009-09-24 Keith

    * afunc.py(nanmedian): There were two nanmedian functions: one that used
      numpy matrices and one taken from scipy that uses numpy arrays. I
      deleted the matrx version.

    * svn_export.py(svn_export): Fixed typo in path.

    * svn_export.py: Added a module that exports the la package from svn and
      tar and bz2 it.

    * __init__.py: Remove deflarry from namespace created when you import la.

    * initial svn import of la package.


